version: 2

defaults: &defaults
  docker:
    - image: circleci/python:3.9.5
  working_directory: ~/project

prepare_venv: &prepare_venv
  run:
    name: Create venv
    command: |
      python3 -m venv venv
      source venv/bin/activate
      pip install --upgrade pip

prepare_tox: &prepare_tox
  run:
    name: Install tox
    command: |
      sudo pip install --upgrade pip
      pip install --user tox


jobs:
  test_ml_pipeline_api:
    <<: *defaults
    working_directory: ~/project/src/ml_pipeline_api
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox
      - run:
          name: Runnning app tests
          command: |
            tox

  deploy_app_to_heroku:
    <<: *defaults
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Deploy to Heroku
          command: |
            git subtree push --prefix src/ml_pipeline_api https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

  test_and_upload_model:
    <<: *defaults
    working_directory: ~/project/src/ml_pipeline_regression_model
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox
      - run:
          name: Test the model
          command: |
            tox
      - run:
          name: Publish model to Gemfury
          command: |
            tox -e publish_model


  deploy_app_container_in_heroku:
    <<: *defaults
    steps:
      - setup_remote_docker:
          # Supported versions: https://circleci.com/docs/2.0/building-docker-images/#docker-version
          version: 20.10.6
      - checkout:
          path: ~/project
      - run:
          name: Build image
          command: |
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            make build-ml-api-heroku
      - run:
          name: Push Image to Heroku
          command: |
            # Push the built container to the Heroku image registry
            make push-ml-api-heroku
      - run:
          name: Release to Heroku
          command: |
            make release-heroku

  # test_regression_model_py36:
  #   docker:
  #     - image: circleci/python:3.6.9
  #   working_directory: ~/project/packages/regression_model
  #   steps:
  #     - checkout:
  #         path: ~/project
  #     - run:
  #         name: Run tests with Python 3.6
  #         command: |
  #           sudo pip install --upgrade pip
  #           pip install --user tox
  #           tox

  test_regression_model_py37:
    docker:
      - image: circleci/python:3.7.6
    working_directory: ~/project/src/ml_pipeline_regression_model
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Run tests with Python 3.7
          command: |
            sudo pip install --upgrade pip
            pip install --user tox
            tox

  test_regression_model_py38:
    docker:
      - image: circleci/python:3.8.0
    working_directory: ~/project/src/ml_pipeline_regression_model
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Run tests with Python 3.8
          command: |
            sudo pip install --upgrade pip
            pip install --user tox
            tox

  train_and_upload_regression_model:
    <<: *defaults
    working_directory: ~/project/src/ml_pipeline_regression_model
    steps:
      - checkout:
          path: ~/project
      - *prepare_venv
      - run: 
          name: Install requirements
          command: |
            . venv/bin/activate
            tox -e publish_model

      # - run: 
      #     name: Train model
      #     command: |
      #       . venv/bin/activate
      #       python3 regression_model/train_pipeline.py
      # - run: 
      #     name: Publish model to Gemfury
      #     command: |
      #       . venv/bin/activate
      #       chmod +x ./publish_model.sh
      #       ./publish_model.sh .



tags_only: &tags_only
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^.*/

workflows:
  version: 2
  integration_tests:
    jobs:
      # - test_ml_pipeline_api
      # - deploy_app_to_heroku:
      #     requires:
      #       - test_ml_pipeline_api
      #     filters:
      #       branches:
      #         only:
      #           - master
      # - test_and_upload_model:
      #     <<: *tags_only
      - test_regression_model_py38
      - train_and_upload_regression_model
      - deploy_app_container_in_heroku:
          filters:
            branches:
              only:
                - master
